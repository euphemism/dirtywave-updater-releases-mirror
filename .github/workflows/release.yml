name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: macos-latest

    permissions:
      attestations: write
      contents: write

    env:
      TMPDIR: /tmp

    defaults:
      run:
        shell: devenv shell bash -- -e {0}

    steps:
      - uses: actions/checkout@v5

      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: devenv
      - name: Install devenv.sh
        shell: bash
        run: nix profile add nixpkgs#devenv

      - name: Prepare devenv shell environment
        id: prepare-devenv-shell
        run: echo "devenv shell ready"

      - name: Determine version bump
        id: determine-bump
        run: |
          echo "type=patch" >> $GITHUB_OUTPUT
          # TODO: Figure out how to dynamically determine bump type
          # cat "$GITHUB_EVENT_PATH" | jq .

          # LABELS=$(jq -r '.pull_request.labels[].name' < "$GITHUB_EVENT_PATH" || true)

          # if echo "$LABELS" | grep -q "major"; then
          #   echo "type=major" >> $GITHUB_OUTPUT
          # elif echo "$LABELS" | grep -q "minor"; then
          #   echo "type=minor" >> $GITHUB_OUTPUT
          # else
          #   echo "type=patch" >> $GITHUB_OUTPUT
          # fi

      - name: Sync package versions
        id: bump
        run: |
          echo "Received ${{ steps.determine-bump.outputs.type }} bump type"
          VERSION=$(set-and-sync-package-versions ${{ steps.determine-bump.outputs.type }})
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: EndBug/add-and-commit@v9
        if: ${{ github.event_name == 'push' }}
        with:
          add: '["devenv.nix", "src-quasar/package.json", "src-tauri/Cargo.toml"]'
          default_author: github_actions
          message: "feat: release ${{ steps.bump.outputs.version }}"
          push: false
          tag: ${{ steps.bump.outputs.version }}

      - name: Build app
        id: build
        run: |
          OUT=$(devenv build -v outputs.dirtywave-updater.bundle.macos)
          echo "out=$OUT" >> $GITHUB_OUTPUT

      - name: Prepare release
        id: prep
        run: |
          prepare-release ${{ steps.bump.outputs.version }} ${{ steps.build.outputs.out }}

      - uses: EndBug/add-and-commit@v9
        if: ${{ github.event_name == 'push' }}
        with:
          add: "latest.json"
          commit: "--amend --no-edit"
          default_author: github_actions

      # Create GitHub Release with artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.version }}
          name: Release ${{ steps.bump.outputs.version }}
          generate_release_notes: true
          files: |
            latest.json
            ${{ steps.build.outputs.out }}/macos/Dirtywave Updater.app
            ${{ steps.build.outputs.out }}/macos/Dirtywave Updater.app.tar.gz
            ${{ steps.build.outputs.out }}/macos/Dirtywave Updater.app.tar.gz.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
